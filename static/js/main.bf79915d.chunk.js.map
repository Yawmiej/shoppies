{"version":3,"sources":["hooks/useFetch.js","_context.js","store/actions.js","components/header.jsx","components/Error.jsx","components/loadingSkeleton.jsx","components/moviesList.jsx","components/movies.jsx","assets/img/empty-state1.png","utils.js","components/nominationsList.jsx","components/nominations.jsx","components/body.jsx","layout.jsx","store/reducer.js","App.js","assets/img/Inner.svg","index.js"],"names":["useFetch","cache","useRef","fetchData","query","a","url","current","result","fetch","response","ok","json","AppContext","React","createContext","SET_PAGE_LOADING","SET_MOVIES_LIST","ADD_TO_NOMINATION","REMOVE_NOMINATION","SET_ERROR","setMoviesList","payload","type","setError","Header","useState","isSearchActive","setIsSearchActive","searchValue","setSearchValue","dispatch","useContext","handleSearchChange","useCallback","value","length","searchFieldMarkup","TopBar","SearchField","onChange","placeholder","showFocusBorder","searchResultAction","err","Error","title","body","searchResultMarkup","ActionList","items","content","onAction","handleSearchResultsDismiss","searchResultsVisible","searchField","searchResults","onSearchResultsDismiss","state","error","className","Banner","status","onDismiss","LoadingSkeleton","map","card","Card","sectioned","TextContainer","SkeletonThumbnail","size","SkeletonDisplayText","SkeletonBodyText","lines","MoviesList","emptyStateMarkup","EmptyState","heading","image","handleCardAction","movie","movies","Search","MediaCard","portrait","Title","description","Year","primaryAction","disabled","nominations","imdbID","src","Poster","alt","height","width","style","objectFit","objectPosition","Movies","moviesMarkup","pageLoading","Layout","Section","getObjectLength","obj","Object","keys","NominationsList","values","actions","destructive","Nominations","emptyStateImage","nominationsMarkup","secondary","Body","padding","loadingMarkup","Loading","Frame","initialState","setPageLoading","setMovies","addToNomination","removeNomination","reducer","App","useReducer","contextValue","useMemo","Provider","theme","colors","primary","topBar","background","backgroundLighter","backgroundDarker","border","color","logo","topBarSource","accessibilityLabel","app","StrictMode","AppProvider","features","newDesignLanguage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf79915d.chunk.js","sourcesContent":["/* eslint-disable consistent-return */\nimport { useRef } from 'react';\n\nconst BASE_URL = 'http://www.omdbapi.com/';\nconst API_KEY = 'b8494e06';\nconst TYPE = 'movie';\n\nconst useFetch = () => {\n  const cache = useRef({});\n\n  const fetchData = async (query) => {\n    const url = `${BASE_URL}?apikey=${API_KEY}&type=${TYPE}&${query}`;\n    if (!query) return;\n\n    //  Check if data exist in cache and return\n    if (cache.current[query]) {\n      const result = cache.current[query];\n      return [null, result];\n    }\n\n    try {\n      const response = await fetch(url);\n\n      if (!response.ok) throw await response.json();\n\n      const result = await response.json();\n      cache.current[query] = result;\n\n      return [null, result];\n    } catch (err) {\n      return [err];\n    }\n  };\n\n  return { fetchData };\n};\n\nexport default useFetch;\n","import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","export const SET_PAGE_LOADING = 'SET_PAGE_LOADING';\nexport const SET_MOVIES_LIST = 'SET_MOVIES_LIST';\nexport const ADD_TO_NOMINATION = 'ADD_TO_NOMINATION';\nexport const REMOVE_NOMINATION = 'REMOVE_NOMINATION';\nexport const SET_ERROR = 'SET_ERROR';\n\nexport function setPageLoading(payload) {\n  return { type: SET_PAGE_LOADING, payload };\n}\n\nexport function setMoviesList(payload) {\n  return { type: SET_MOVIES_LIST, payload };\n}\n\nexport function addToNomination(payload) {\n  return { type: ADD_TO_NOMINATION, payload };\n}\n\nexport function removeNomination(payload) {\n  return { type: REMOVE_NOMINATION, payload };\n}\n\nexport function setError(payload) {\n  return { type: SET_ERROR, payload };\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport { ActionList, TopBar } from '@shopify/polaris';\nimport useFetch from '../hooks/useFetch';\nimport AppContext from '../_context';\nimport { setError, setMoviesList, setPageLoading } from '../store/actions';\n\nfunction Header() {\n  const [isSearchActive, setIsSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const { fetchData } = useFetch();\n  const { dispatch } = useContext(AppContext);\n\n  const handleSearchChange = useCallback((value) => {\n    setSearchValue(value);\n    setIsSearchActive(value.length > 0);\n  }, []);\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchChange}\n      value={searchValue}\n      placeholder=\"Search for movies\"\n      showFocusBorder\n    />\n  );\n\n  const searchResultAction = useCallback(async () => {\n    if (!searchValue) return;\n    setIsSearchActive(false);\n\n    dispatch(setPageLoading(true));\n\n    const [err, result] = await fetchData(`s=${searchValue}`);\n\n    if (err || result.Error) {\n      dispatch(setError({ title: err ? err.Error : result.Error, body: '' }));\n    } else dispatch(setMoviesList(result));\n  }, [searchValue]);\n\n  const searchResultMarkup = (\n    <ActionList items={[{ content: `Search: ${searchValue}`, onAction: searchResultAction }]} />\n  );\n\n  const handleSearchResultsDismiss = useCallback(() => {\n    setIsSearchActive(false);\n  }, []);\n\n  return (\n    <TopBar\n      searchResultsVisible={isSearchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n    />\n  );\n}\n\nexport default Header;\n","import { Banner } from '@shopify/polaris';\nimport React, { useContext } from 'react';\nimport { setError } from '../store/actions';\nimport AppContext from '../_context';\n\nfunction Error() {\n  const { state, dispatch } = useContext(AppContext);\n  return state.error ? (\n    <div className=\"error-banner\">\n      <Banner title={state.error.title} status=\"warning\" onDismiss={() => dispatch(setError(null))}>\n        <p>{state.error.body}</p>\n      </Banner>\n    </div>\n  ) : null;\n}\n\nexport default Error;\n","import {\n  Card,\n  SkeletonBodyText,\n  SkeletonDisplayText,\n  SkeletonThumbnail,\n  TextContainer,\n} from '@shopify/polaris';\nimport React from 'react';\n\nfunction LoadingSkeleton() {\n  const cardArray = ['cardA', 'cardB', 'cardC', 'cardD', 'cardE', 'cardF', 'cardG', 'cardH'];\n  return (\n    <div className=\"center-flex\">\n      <div className=\"flex-row\">\n        {cardArray.map((card) => (\n          <div className=\"movie-card\" key={card}>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonThumbnail size=\"large\" />\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines=\"3\" />\n                <SkeletonDisplayText size=\"large\" />\n              </TextContainer>\n            </Card>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default LoadingSkeleton;\n","import React, { useCallback, useContext } from 'react';\nimport { EmptyState, MediaCard } from '@shopify/polaris';\n\nimport AppContext from '../_context';\nimport { addToNomination } from '../store/actions';\n\nfunction MoviesList() {\n  const { state, dispatch } = useContext(AppContext);\n\n  const emptyStateMarkup = (\n    <EmptyState\n      heading=\"Search a movie to nominate\"\n      image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n    >\n      <p>All your nominated movies will appear here</p>\n    </EmptyState>\n  );\n\n  const handleCardAction = useCallback((movie) => {\n    dispatch(addToNomination(movie));\n  }, []);\n\n  const renderMovie = (movie) => (\n    <div className=\"movie-card media\" key={movie.imdbID}>\n      <MediaCard\n        portrait\n        title={movie.Title}\n        description={`(${movie.Year})`}\n        primaryAction={{\n          content: 'Nominate',\n          onAction: () => handleCardAction(movie),\n          disabled: !!state.nominations[movie.imdbID],\n        }}\n      >\n        <img\n          src={movie.Poster}\n          alt={movie.Title}\n          height=\"150px\"\n          width=\"100%\"\n          style={{ objectFit: 'cover', objectPosition: 'center' }}\n        />\n      </MediaCard>\n    </div>\n  );\n\n  return state.movies.Search ? (\n    <div className=\"center-flex\">\n      <div className=\"flex-row media\">{state.movies?.Search?.map(renderMovie)}</div>\n    </div>\n  ) : (\n    emptyStateMarkup\n  );\n}\nexport default MoviesList;\n","import { Card, Layout } from '@shopify/polaris';\nimport React, { useContext } from 'react';\nimport AppContext from '../_context';\nimport Error from './Error';\nimport LoadingSkeleton from './loadingSkeleton';\nimport MoviesList from './moviesList';\n\nfunction Movies() {\n  const { state } = useContext(AppContext);\n  const moviesMarkup = state.pageLoading ? <LoadingSkeleton /> : <MoviesList />;\n\n  return (\n    <Layout.Section>\n      <Card title=\"All Movies\" sectioned>\n        <Error />\n        {moviesMarkup}\n      </Card>\n    </Layout.Section>\n  );\n}\n\nexport default Movies;\n","export default __webpack_public_path__ + \"static/media/empty-state1.6621840e.png\";","const getObjectLength = (obj) => Object.keys(obj).length;\n\nexport default getObjectLength;\n","import { Card } from '@shopify/polaris';\nimport React, { useContext } from 'react';\nimport { removeNomination } from '../store/actions';\nimport AppContext from '../_context';\n\nfunction NominationsList() {\n  const { state, dispatch } = useContext(AppContext);\n\n  const handleCardAction = (movie) => dispatch(removeNomination(movie));\n\n  const renderMovie = (movie) => (\n    <Card.Section\n      title={movie.Title}\n      key={movie.imdbID}\n      actions={[{ content: 'Remove', destructive: true, onAction: () => handleCardAction(movie) }]}\n    >\n      <p>{`(${movie.Year})`}</p>\n    </Card.Section>\n  );\n\n  return <div className=\"nominations\">{Object.values(state.nominations).map(renderMovie)}</div>;\n}\n\nexport default NominationsList;\n","import { Card, EmptyState, Layout } from '@shopify/polaris';\nimport React, { useContext } from 'react';\n\nimport emptyStateImage from '../assets/img/empty-state1.png';\nimport getObjectLength from '../utils';\nimport AppContext from '../_context';\nimport NominationsList from './nominationsList';\n\nfunction Nominations() {\n  const { state } = useContext(AppContext);\n  const emptyStateMarkup = (\n    <Card.Section>\n      <EmptyState heading=\"No Nominated Movies Yet\" image={emptyStateImage}>\n        <p>All your nominated movies will appear here</p>\n      </EmptyState>\n    </Card.Section>\n  );\n\n  const nominationsMarkup =\n    getObjectLength(state.nominations) === 0 ? emptyStateMarkup : <NominationsList />;\n\n  return (\n    <Layout.Section secondary>\n      <Card title=\"Nominated Movies\" sectioned>\n        {nominationsMarkup}\n      </Card>\n    </Layout.Section>\n  );\n}\n\nexport default Nominations;\n","import React from 'react';\nimport { Layout } from '@shopify/polaris';\nimport Movies from './movies';\nimport Nominations from './nominations';\n\nexport default function Body() {\n  return (\n    <div style={{ padding: '2rem' }}>\n      <Layout>\n        <Movies />\n        <Nominations />\n      </Layout>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Frame, Loading } from '@shopify/polaris';\n\nimport Header from './components/header';\nimport Body from './components/body';\nimport AppContext from './_context';\n\nfunction Layout() {\n  const { state } = useContext(AppContext);\n\n  const loadingMarkup = state.pageLoading ? <Loading /> : null;\n\n  return (\n    <Frame>\n      <Header />\n      {loadingMarkup}\n      <Body />\n    </Frame>\n  );\n}\n\nexport default Layout;\n","import getObjectLength from '../utils';\nimport {\n  SET_MOVIES_LIST,\n  ADD_TO_NOMINATION,\n  SET_PAGE_LOADING,\n  REMOVE_NOMINATION,\n  SET_ERROR,\n} from './actions';\n\nexport const initialState = {\n  pageLoading: false,\n  movies: {},\n  nominations: {},\n  error: null,\n};\n\nconst setPageLoading = (state, payload) => ({ ...state, pageLoading: payload });\n\nconst setMovies = (state, payload) => ({\n  ...state,\n  movies: payload,\n  pageLoading: false,\n  error: null,\n});\n\nconst addToNomination = (state, payload) => {\n  const MAXIMUM_NOMINATIONS = 5;\n  const nominationsLength = getObjectLength(state.nominations);\n\n  if (nominationsLength === MAXIMUM_NOMINATIONS) {\n    return {\n      ...state,\n      error: {\n        title: 'Maximum Nominations',\n        body: 'You have a maximum of 5 movie nominations. Remove nominated movies to add more.',\n      },\n    };\n  }\n\n  return {\n    ...state,\n    nominations: { ...state.nominations, [payload.imdbID]: payload },\n  };\n};\n\nconst removeNomination = (state, payload) => {\n  const nominations = { ...state.nominations };\n  delete nominations[payload.imdbID];\n\n  return { ...state, nominations: { ...nominations }, error: null };\n};\n\nconst setError = (state, payload) => ({ ...state, error: payload, pageLoading: false });\n\nexport function reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case SET_PAGE_LOADING:\n      return setPageLoading(state, payload);\n    case SET_ERROR:\n      return setError(state, payload);\n    case SET_MOVIES_LIST:\n      return setMovies(state, payload);\n    case ADD_TO_NOMINATION:\n      return addToNomination(state, payload);\n    case REMOVE_NOMINATION:\n      return removeNomination(state, payload);\n    default:\n      return state;\n  }\n}\n","import React, { useMemo, useReducer } from 'react';\nimport Layout from './layout';\nimport { initialState, reducer } from './store/reducer';\nimport AppContext from './_context';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const contextValue = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      <Layout />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/Inner.ba5b1634.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppProvider } from '@shopify/polaris';\n\nimport App from './App';\nimport logo from './assets/img/Inner.svg';\n\nimport '@shopify/polaris/dist/styles.css';\nimport './assets/css/styles.css';\n\nconst theme = {\n  colors: {\n    primary: '#008060',\n    topBar: {\n      background: '#fff',\n      backgroundLighter: '#F4F6F8',\n      backgroundDarker: '#DFE3E8',\n      border: '#C4CDD5',\n      color: '#212B36',\n    },\n  },\n  logo: {\n    width: 180,\n    topBarSource: logo,\n    url: '/',\n    accessibilityLabel: 'Shoppies',\n  },\n};\n\nconst app = (\n  <React.StrictMode>\n    <AppProvider features={{ newDesignLanguage: true }} theme={theme}>\n      <App />\n    </AppProvider>\n  </React.StrictMode>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}